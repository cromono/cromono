openapi: 3.0.0
info:
  version: 1.0.0
  title: cron-monitor
servers:
  - url: 'http://localhost:8081'
    description: '로컬 테스트 환경'
  - url: 'http://139.150.64.58:80'
    description: '배포 환경 로컬 접속'
  - url: 'http://10.7.27.11:80'
    description: '배포 환경 gcloud 접속'
  - url: 'http://182.162.142.151:8086'
    description: 'InfluxDB'
  - url: 'http://139.150.64.58:3306'
    description: 'MySQL DB 로컬 접속'
  - url: 'http://10.7.27.11:3306'
    description: 'MySQL DB gcloud 접속'
  - url: 'http://10.7.27.9:9092'
    description: '카프카 gcloud 접속'
  - url: 'http://182.162.142.151:9093'
    description: '카프카 로컬 접속'
  - url: 'http://localhost:6379'
    description: '테스트용 레디스 리프레시 토큰 DB'
  - url: '10.7.27.9:6379'
    description: '운영용 레디스 리프레시 토큰 DB'

paths:
  /auth/local/login:
    post:
      summary: '사용자 로그인'
      operationId: login
      tags:
        - authentication
      requestBody:
        $ref: '#/components/requestBodies/PostUsers'
      responses:
        '200':
          description: '로그인 성공'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '400':
          description: 'Bad request'
  /auth/local/logout:
    post:
      summary: '사용자 로그아웃'
      operationId: logout
      tags:
        - authentication
      requestBody:
        $ref: '#/components/requestBodies/PostUsers'
      responses:
        '200':
          description: '로그아웃 성공'
        '400':
          description: 'Bad request'
  /auth/local/reissue:
    post:
      summary: '사용자 Access token 재발급'
      operationId: reissueToken
      tags:
        - authentication
      requestBody:
        $ref: '#/components/requestBodies/PostReissue'
      responses:
        '201':
          description: '재발급 성공'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '400':
          description: 'Bad request'
  /auth/register:
    post:
      summary: '사용자 회원가입'
      operationId: register
      tags:
        - authentication
      requestBody:
        $ref: '#/components/requestBodies/PostUsers'
      responses:
        '201':
          description: '정상적으로  등록됨'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '400':
          description: 'Bad request'
  /cron-servers:
    get:
      summary: '크론 서버 목록 조회'
      operationId: getCronServers
      tags:
        - cron-servers
      responses:
        '200':
          description: '서버 목록 조회 성공'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Server'
        '404':
          description: 'Not found'
    post:
      summary: '크론 서버 등록'
      operationId: addCronServer
      tags:
        - cron-servers
      requestBody:
        $ref: '#/components/requestBodies/PostCronServers'
      responses:
        '201':
          description: '정상적으로  등록됨'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: '등록된 크론 서버 id'
        '400':
          description: 'Bad request'
  /cron-servers/{serverIp}:
    patch:
      summary: '크론 서버 수정'
      operationId: updateCronServer
      tags:
        - cron-servers
      parameters:
        - $ref: '#/components/parameters/serverIpPath'
      requestBody:
        $ref: '#/components/requestBodies/PatchCronServers'
      responses:
        '201':
          description: '정상적으로 수정됨'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: '변경된 크론 서버 id'
        '400':
          description: 'Bad request'
    delete:
      summary: '크론 서버 삭제'
      operationId: deleteCronServer
      tags:
        - cron-servers
      parameters:
        - $ref: '#/components/parameters/serverIpPath'
      responses:
        '204':
          description: '정상적으로  삭제됨'
        '400':
          description: 'Bad request'
  /cron-servers/{serverIp}/cron-jobs:
    post:
      summary: '크론 job 등록'
      operationId: registerCronJob
      tags:
        - cron-jobs
      parameters:
        - $ref: '#/components/parameters/serverIpPath'
      requestBody:
        $ref: '#/components/requestBodies/PostCronJobs'
      responses:
        '201':
          description: '정상적으로  등록됨'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: '등록된 크론 job id'
        '400':
          description: 'Bad request'
    get:
      summary: '서버별 크론 job 목록 조회'
      operationId: getCronJobsInServer
      tags:
        - cron-jobs
      parameters:
        - $ref: '#/components/parameters/serverIpPath'
      responses:
        '200':
          description: '크론 job 목록 조회 성공'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CronJob'
        '404':
          description: 'Not found'
  /cron-servers/{serverIp}/cron-jobs/{cronJobId}:
    patch:
      summary: '크론 job 수정'
      operationId: updateCronJob
      tags:
        - cron-jobs
      parameters:
        - $ref: '#/components/parameters/serverIpPath'
        - $ref: '#/components/parameters/cronJobIdPath'
      requestBody:
        $ref: '#/components/requestBodies/PatchCronjobs'
      responses:
        '201':
          description: '정상적으로 수정됨'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: '변경된 크론 job id'
        '400':
          description: 'Bad request'
    delete:
      summary: '크론 job 삭제'
      operationId: deleteCronjob
      tags:
        - cron-jobs
      parameters:
        - $ref: '#/components/parameters/serverIpPath'
        - $ref: '#/components/parameters/cronJobIdPath'
      responses:
        '204':
          description: '정상적으로  삭제됨'
        '400':
          description: 'Bad request'
  /cron-servers/{serverIp}/cron-jobs/{cronJobId}/processes:
    get:
      summary: '크론 프로세스 목록 조회'
      operationId: getCronProcesses
      tags:
        - cron-processes
      parameters:
        - $ref: '#/components/parameters/serverIpPath'
        - $ref: '#/components/parameters/cronJobIdPath'
      responses:
        '200':
          description: '프로세스 실행 목록 조회 성공'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CronProcess'
        '404':
          description: 'Not found'
  /cron-servers/{serverIp}/cron-jobs/{cronJobId}/processes/{pid}:
    get:
      summary: '크론 프로세스 조회'
      operationId: getCronProcess
      tags:
        - cron-processes
      parameters:
        - $ref: '#/components/parameters/serverIpPath'
        - $ref: '#/components/parameters/cronJobIdPath'
        - $ref: '#/components/parameters/pidPath'
      responses:
        '200':
          description: '프로세스 조회 성공'
        '404':
          description: 'Not found'
  /cron-servers/{serverIp}/cron-jobs/{cronJobId}/processes/{pid}/logs:
    get:
      summary: '프로세스 로그 목록 조회'
      operationId: getCronProcessLogs
      tags:
        - cron-processes
      parameters:
        - $ref: '#/components/parameters/serverIpPath'
        - $ref: '#/components/parameters/cronJobIdPath'
        - $ref: '#/components/parameters/pidPath'
      responses:
        '200':
          description: '로그 조회 성공'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CronLog'
        '404':
          description: 'Not found'
  /users:
    post:
      summary: '사용자 등록'
      operationId: registerUser
      tags:
        - users
      requestBody:
        $ref: '#/components/requestBodies/PostUsers'
      responses:
        '201':
          description: '정상적으로  등록됨'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: '등록된 사용자 id'
        '400':
          description: 'Bad request'
    get:
      summary: '사용자 목록 조회'
      operationId: getUsers
      tags:
        - users
      responses:
        '200':
          description: '사용자 목록 조회 성공'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '404':
          description: 'Not found'
  /users/{userId}:
    patch:
      summary: '회원정보변경'
      operationId: changeUserInfo
      tags:
        - users
      parameters:
        - $ref: '#/components/parameters/userIdPath'
      requestBody:
        $ref: '#/components/requestBodies/PatchUser'
      responses:
        '201':
          description: '정상적으로  변경됨'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: '변경된 사용자 id'
        '400':
          description: 'Bad request'
    delete:
      summary: '회원탈퇴'
      operationId: deleteUser
      tags:
        - users
      parameters:
        - $ref: '#/components/parameters/userIdPath'
      responses:
        '204':
          description: '정상적으로  탈퇴됨'
        '400':
          description: 'Bad request'
    get:
      summary: '회원정보조회'
      operationId: getUserInfo
      tags:
        - users
      parameters:
        - $ref: '#/components/parameters/userIdPath'
      responses:
        '200':
          description: '회원정보 조회 성공'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: 'Not found'
  /team-auths:
    post:
      summary: '사용자 팀 권한 추가'
      operationId: addTeamAuthorityToUser
      tags:
        - team-auths
      requestBody:
        $ref: '#/components/requestBodies/PostTeamAuths'
      responses:
        '201':
          description: '정상적으로 등록됨'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: '권한이 추가된 사용자 id'
        '400':
          description: 'Bad request'
    get:
      summary: '팀원 권한 리스트 조회'
      operationId: getTeamAuthorities
      tags:
        - team-auths
      responses:
        '200':
          description: '팀원 권한 리스트 조회 성공'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamUser'
        '404':
          description: 'Not found'
  /team-auths/users/{userId}/teams/{teamId}:
    patch:
      summary: '팀원 권한 수정'
      operationId: changeMemberAuthority
      tags:
        - team-auths
      parameters:
        - $ref: '#/components/parameters/userIdPath'
        - $ref: '#/components/parameters/teamIdPath'
      requestBody:
        $ref: '#/components/requestBodies/PatchTeamAuthUserTeam'
      responses:
        '201':
          description: '정상적으로 수정됨'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: '변경된 권한 id'
        '400':
          description: 'Bad request'
    delete:
      summary: '팀원 권한삭제'
      operationId: deleteMemberAuthority
      tags:
        - team-auths
      parameters:
        - $ref: '#/components/parameters/userIdPath'
        - $ref: '#/components/parameters/teamIdPath'
      responses:
        '204':
          description: '정상적으로  탈퇴됨'
        '400':
          description: 'Bad request'
    get:
      summary: '팀원 권환조회'
      operationId: getMemberAuthority
      tags:
        - team-auths
      parameters:
        - $ref: '#/components/parameters/userIdPath'
        - $ref: '#/components/parameters/teamIdPath'
      responses:
        '200':
          description: '정상적으로 조회됨'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamUser'
        '400':
          description: 'Bad request'
  /teams:
    get:
      summary: '팀 목록 조회'
      operationId: getTeamList
      tags:
        - teams
      responses:
        '200':
          description: '정상적으로 조회됨'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
        '400':
          description: 'Bad request'
    post:
      summary: '팀 생성'
      operationId: createTeam
      tags:
        - teams
      requestBody:
        $ref: '#/components/requestBodies/PostTeams'
      responses:
        '201':
          description: '정상적으로 추가됨'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: '생성된 팀 id'
        '400':
          description: 'Bad request'
  /teams/{teamId}:
    patch:
      summary: '팀명 수정'
      operationId: changeTeam
      tags:
        - teams
      parameters:
        - $ref: '#/components/parameters/teamIdPath'
      requestBody:
        $ref: '#/components/requestBodies/PatchTeam'
      responses:
        '201':
          description: '정상적으로 변경됨'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: '이름이 변경된 팀의 id'
        '400':
          description: 'Bad request'
    get:
      summary: '팀 조회'
      operationId: getTeam
      tags:
        - teams
      parameters:
        - $ref: '#/components/parameters/teamIdPath'
      responses:
        '200':
          description: '정상적으로 조회됨'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          description: 'Bad request'
    delete:
      summary: '팀 삭제'
      operationId: deleteTeam
      tags:
        - teams
      parameters:
        - $ref: '#/components/parameters/teamIdPath'
      responses:
        '204':
          description: '정상적으로 삭제됨'
        '400':
          description: 'Bad request'
  /teams/{teamId}/users:
    get:
      summary: '팀원 목록 조회'
      operationId: getMembers
      tags:
        - teams
      parameters:
        - $ref: '#/components/parameters/teamIdPath'
      responses:
        '200':
          description: '정상적으로 조회됨'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamMembers'
        '400':
          description: 'Bad request'
    post:
      summary: '팀원 추가'
      operationId: addMember
      tags:
        - teams
      parameters:
        - $ref: '#/components/parameters/teamIdPath'
      requestBody:
        $ref: '#/components/requestBodies/PostTeamUsers'
      responses:
        '201':
          description: '정상적으로 추가됨'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: '추가된 팀원 id'
        '400':
          description: 'Bad request'
  /teams/{teamId}/users/{userId} :
    delete:
      summary: '팀원 삭제( 팀에서 유저 제외)'
      operationId: deleteUserInTeam
      tags:
        - teams
      parameters:
        - $ref: '#/components/parameters/teamIdPath'
        - $ref: '#/components/parameters/userIdPath'
      responses:
        '204':
          description: '정상적으로 삭제됨'
        '400':
          description: 'Bad request'
  /cron-read-auths:
    get:
      summary: '사용자의 크론 조회 권한 목록 조회'
      operationId: getTeamMemberList
      tags:
        - cron-read-auths
      responses:
        '200':
          description: '정상적으로 조회됨'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CronReadAuths'
        '400':
          description: 'Bad request'
  /cron-read-auths/users/{userId}/crons/{cronJobId}:
    get:
      summary: '사용자의 크론 조회 권한에 대한 정보를 상세 조회한다'
      operationId: getUserCronReadAuth
      tags:
        - cron-read-auths/users
      parameters:
        - $ref: '#/components/parameters/userIdPath'
        - $ref: '#/components/parameters/cronJobIdPath'
      responses:
        '200':
          description: '정상적으로 조회됨'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamUser'
        '400':
          description: 'Bad request'
    post:
      summary: '사용자의 크론 조회 권한을 추가한다'
      operationId: addUserCronReadAuth
      tags:
        - cron-read-auths/users
      parameters:
        - $ref: '#/components/parameters/userIdPath'
        - $ref: '#/components/parameters/cronJobIdPath'
      responses:
        '201':
          description: '정상적으로 추가됨'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: '크론 job id'
        '400':
          description: 'Bad request'
    delete:
      summary: '사용자의 크론 조회 권한을 삭제한다'
      operationId: deleteUserCronReadAuth
      tags:
        - cron-read-auths/users
      parameters:
        - $ref: '#/components/parameters/userIdPath'
        - $ref: '#/components/parameters/cronJobIdPath'
      responses:
        '204':
          description: '정상적으로 삭제됨'
        '400':
          description: 'Bad request'
    patch:
      summary: '사용자의 크론 조회 권한을 수정한다'
      operationId: addUserCronReadAuth
      tags:
        - cron-read-auths/users
      parameters:
        - $ref: '#/components/parameters/userIdPath'
        - $ref: '#/components/parameters/cronJobIdPath'
      responses:
        '201':
          description: '정상적으로 추가됨'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: '크론 job id'
        '400':
          description: 'Bad request'
  /cron-read-auths/teams/{teamId}/crons/{cronJobId}:
    post:
      summary: '팀 크론 조회 권한 추가'
      operationId: addTeamCronReadAuth
      tags:
        - cron-read-auths/teams
      parameters:
        - $ref: '#/components/parameters/teamIdPath'
        - $ref: '#/components/parameters/cronJobIdPath'
      requestBody:
        $ref: '#/components/requestBodies/PostCronReadAuthsTeamsCrons'
      responses:
        '201':
          description: '정상적으로 변경됨'
        '400':
          description: 'Bad request'
    patch:
      summary: '팀 크론 조회 권한 수정'
      operationId: updateTeamCronReadAuth
      tags:
        - cron-read-auths/teams
      parameters:
        - $ref: '#/components/parameters/teamIdPath'
        - $ref: '#/components/parameters/cronJobIdPath'
      requestBody:
        $ref: '#/components/requestBodies/PatchCronReadAuthsTeamsCrons'
      responses:
        '201':
          description: '정상적으로 변경됨'
        '400':
          description: 'Bad request'
    get:
      summary: '팀 크론 조회 권한 조회'
      operationId: getTeamCronReadAuth
      tags:
        - cron-read-auths/teams
      parameters:
        - $ref: '#/components/parameters/teamIdPath'
        - $ref: '#/components/parameters/cronJobIdPath'
      responses:
        '200':
          description: '정상적으로 조회됨'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamUser'
        '400':
          description: 'Bad request'
    delete:
      summary: '팀 크론 조회 권한 삭제'
      operationId: deleteTeamCronReadAuth
      tags:
        - cron-read-auths/teams
      parameters:
        - $ref: '#/components/parameters/teamIdPath'
        - $ref: '#/components/parameters/cronJobIdPath'
      responses:
        '200':
          description: '정상적으로 삭제됨'
        '400':
          description: 'Bad request'
  /notifications/users/{userId}/crons/{cronJobId}:
    post:
      summary: '알림 추가'
      operationId: changeTeam
      tags:
        - notifications
      parameters:
        - $ref: '#/components/parameters/userIdPath'
        - $ref: '#/components/parameters/cronJobIdPath'
      requestBody:
        $ref: '#/components/requestBodies/PostNotificationsUsers'
      responses:
        '201':
          description: '정상적으로 변경됨'
        '400':
          description: 'Bad request'
    patch:
      summary: '알림 수정'
      operationId: changeTeam
      tags:
        - notifications
      parameters:
        - $ref: '#/components/parameters/userIdPath'
        - $ref: '#/components/parameters/cronJobIdPath'
      requestBody:
        $ref: '#/components/requestBodies/PatchNotificationsUsers'
      responses:
        '201':
          description: '정상적으로 변경됨'
        '400':
          description: 'Bad request'
    get:
      summary: '알림 조회'
      operationId: getTeam
      tags:
        - notifications
      parameters:
        - $ref: '#/components/parameters/userIdPath'
        - $ref: '#/components/parameters/cronJobIdPath'
      responses:
        '200':
          description: '정상적으로 조회됨'
        '400':
          description: 'Bad request'
    delete:
      summary: '알림 삭제'
      operationId: deleteTeam
      tags:
        - notifications
      parameters:
        - $ref: '#/components/parameters/userIdPath'
        - $ref: '#/components/parameters/cronJobIdPath'
      responses:
        '204':
          description: '정상적으로 삭제됨'
        '400':
          description: 'Bad request'
  /notifications/users/{userId}/crons/{cronJobId}/webhooks:
    post:
      summary: '웹훅 추가'
      operationId: changeTeam
      tags:
        - webhook
      parameters:
        - $ref: '#/components/parameters/userIdPath'
        - $ref: '#/components/parameters/cronJobIdPath'
      requestBody:
        $ref: '#/components/requestBodies/PostNotificationsNotId'
      responses:
        '201':
          description: '정상적으로 변경됨'
        '400':
          description: 'Bad request'
    get:
      summary: '웹훅 리스트 조회'
      operationId: getWebhooks
      tags:
        - webhook
      parameters:
        - $ref: '#/components/parameters/userIdPath'
        - $ref: '#/components/parameters/cronJobIdPath'
      responses:
        '200':
          description: '정상적으로 조회됨'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
        '400':
          description: 'Bad request'
  /notifications/users/{userId}/crons/{cronJobId}/webhooks/{webhookId}:
    patch:
      summary: '웹훅 수정'
      operationId: changeTeam
      tags:
        - webhook
      parameters:
        - $ref: '#/components/parameters/userIdPath'
        - $ref: '#/components/parameters/cronJobIdPath'
        - $ref: '#/components/parameters/webhookIdPath'
      requestBody:
        $ref: '#/components/requestBodies/PatchNotificationsNotId'
      responses:
        '201':
          description: '정상적으로 변경됨'
        '400':
          description: 'Bad request'
    delete:
      summary: '웹훅 삭제'
      operationId: deleteTeam
      tags:
        - webhook
      parameters:
        - $ref: '#/components/parameters/userIdPath'
        - $ref: '#/components/parameters/cronJobIdPath'
        - $ref: '#/components/parameters/webhookIdPath'
      responses:
        '204':
          description: '정상적으로 삭제됨'
        '400':
          description: 'Bad request'
components:
  schemas:
    AccessToken:
      description: '액세스 토큰'
      type: object
      properties:
        token:
          type: string
    CronLog:
      description: '로그 내역'
      type: object
      properties:
        logTime:
          type: string
        cronJobId:
          type: string
        pid:
          type: string
        log:
          type: string
    CronJob:
      description: '크론 job'
      type: object
      properties:
        UUID:
          type: integer
        serverIp:
          type: string
        cronName:
          type: string
        cronExpr:
          type: string
        minTime:
          type: integer
    CronProcess:
      description: '크론 프로세스'
      type: object
      properties:
        cronJobId:
          type: string
        pid:
          type: string
        startTime:
          type: string
        endTime:
          type: string
    Server:
      description: '서버'
      type: object
      properties:
        serverIp:
          type: string
    User:
      description: '사용자'
      type: object
      properties:
        userId:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
    TeamUser:
      description: '팀원'
      type: object
      properties:
        teamId:
          type: string
        uidId:
          type: string
        authId:
          type: string
    Team:
      description: '팀'
      type: object
      properties:
        teamId:
          type: string
        uidId:
          type: string
        authId:
          type: string
    Webhook:
      description: '웹훅'
      type: object
      properties:
        url:
          type: string
    TeamMembers:
      description: '팀원리스트'
      type: object
      properties:
        userId:
          type: string
        name:
          type: string
        email:
          type: string
    CronReadAuths:
      description: '읽기 권한을 갖고 있는 크론잡 리스트'
      type: object
      properties:
        userId:
          type: string
        cronJobId:
          type: string
  parameters:
    cronJobIdPath:
      name: cronJobId
      in: path
      description: '크론 job의 id'
      required: true
      schema:
        type: integer
    pidPath:
      name: pid
      required: true
      in: path
      description: '크론 프로세스 pid'
      schema:
        type: integer
    serverIpPath:
      name: serverIp
      in: path
      description: '크론 서버의 ip'
      required: true
      schema:
        type: string
    userIdPath:
      name: userId
      in: path
      description: '유저의 id'
      required: true
      schema:
        type: string
    teamIdPath:
      name: teamId
      in: path
      description: '팀의 id'
      required: true
      schema:
        type: string
    webhookIdPath:
      name: webhookId
      in: path
      description: '웹훅의 id'
      required: true
      schema:
        type: string
  requestBodies:
    PostReissue:
      description: '엑세스 토큰 재발급'
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - refreshToken
            properties:
              refreshToken:
                type: string
    PostCronServers:
      description: '크론 서버 등록'
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - serverIp
            properties:
              serverIp:
                type: string
    PatchCronServers:
      description: '크론 서버 등록'
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              serverIp:
                type: string
    PostCronJobs:
      description: '크론 등록'
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - cronName
              - cronExpr
            properties:
              cronName:
                type: string
              cronExpr:
                type: string
    PatchCronJobs:
      description: '크론 수정'
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              cronName:
                type: string
              cronExpr:
                type: string
    PostUsers:
      description: '사용자 등록'
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - id
              - name
              - email
              - password
            properties:
              id:
                type: string
              name:
                type: string
              email:
                type: string
              password:
                type: string
    PatchUser:
      description: '사용자 정보 변경'
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
              password:
                type: string
    PostTeamAuths:
      description: '사용자 권한 변경'
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - teamId
              - uid
              - authId
            properties:
              teamId:
                type: string
              uid:
                type: string
              authId:
                type: string
    PatchTeamAuthUserTeam:
      description: '팀원 권한 수정'
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - authId
            properties:
              authId:
                type: string
    PostTeams:
      description: '팀 생성'
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - teamId
              - teamName
              - uid
            properties:
              teamId:
                type: string
              teamName:
                type: string
              uid:
                type: string
    PatchTeam:
      description: '팀명 수정'
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              teamName:
                type: string
    PostTeamUsers:
      description: '팀원 추가'
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - userId
              - authId
            properties:
              userId:
                type: string
              authId:
                type: string
    PostCronReadAuthsTeamsCrons:
      description: '팀 크론 추가'
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - userId
              - teamId
              - serverIp
              - cronName
              - cronExpr
              - minTime
            properties:
              userId:
                type: string
              teamId:
                type: string
              serverIp:
                type: string
              cronName:
                type: string
              cronExpr:
                type: string
              minTime:
                type: integer
    PatchCronReadAuthsTeamsCrons:
      description: '팀 크론 변경'
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - userId
              - teamId
              - serverIp
              - cronName
              - cronExpr
              - minTime
            properties:
              userId:
                type: string
              teamId:
                type: string
              serverIp:
                type: string
              cronName:
                type: string
              cronExpr:
                type: string
              minTime:
                type: integer
    PostNotificationsUsers:
      description: '알림 추가'
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - rcvUserId
              - createUserId
              - notType
            properties:
              rcvUserId:
                type: string
              createUserId:
                type: string
              notType:
                type: string
    PatchNotificationsUsers:
      description: '알림 수정'
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - notId
              - notType
            properties:
              notId:
                type: integer
              notType:
                type: string
    PostNotificationsNotId:
      description: '웹훅 추가'
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - url
            properties:
              url:
                type: string
    PatchNotificationsNotId:
      description: '웹훅 수정'
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - webhookId
              - url
            properties:
              pk:
                type: integer
              url:
                type: string